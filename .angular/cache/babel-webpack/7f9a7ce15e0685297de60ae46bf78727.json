{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, mergeMap, catchError } from 'rxjs/operators';\nimport * as fromHomeActions from './home.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"./../../../shared/services/weather.service\";\nexport let HomeEffects = /*#__PURE__*/(() => {\n  class HomeEffects {\n    constructor(actions$, store, weatherService) {\n      this.actions$ = actions$;\n      this.store = store;\n      this.weatherService = weatherService;\n      this.loadCurrentWeather$ = createEffect(() => this.actions$.pipe(ofType(fromHomeActions.loadCurrentWeather), mergeMap(({\n        query\n      }) => this.weatherService.getCityWeatherByQuery(query)), catchError((err, caught$) => {\n        this.store.dispatch(fromHomeActions.loadCurrentWeatherFailed());\n        return caught$;\n      }), map(entity => fromHomeActions.loadCurrentWeatherSuccess({\n        entity\n      }))));\n    }\n\n  }\n\n  HomeEffects.ɵfac = function HomeEffects_Factory(t) {\n    return new (t || HomeEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.WeatherService));\n  };\n\n  HomeEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeEffects,\n    factory: HomeEffects.ɵfac\n  });\n  return HomeEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}