{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cities.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"ngx-bootstrap/typeahead\";\nimport * as i4 from \"@angular/common\";\n\nfunction CitiesTypeaheadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Carregando\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CitiesTypeaheadComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.item;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", item_r3.name, \", \", item_r3.country, \"\");\n  }\n}\n\nexport let CitiesTypeaheadComponent = /*#__PURE__*/(() => {\n  class CitiesTypeaheadComponent {\n    constructor(citiesService, control) {\n      this.citiesService = citiesService;\n      this.control = control;\n      control.valueAccessor = this;\n    }\n\n    ngOnInit() {\n      this.dataSource$ = new Observable(subscriber => subscriber.next(this.search)).pipe(switchMap(query => this.citiesService.getCities(query)));\n    }\n\n    onSelected(match) {\n      this.onTouched();\n      this.onChange(match.item);\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n    writeValue() {}\n\n  }\n\n  CitiesTypeaheadComponent.ɵfac = function CitiesTypeaheadComponent_Factory(t) {\n    return new (t || CitiesTypeaheadComponent)(i0.ɵɵdirectiveInject(i1.CitiesService), i0.ɵɵdirectiveInject(i2.NgControl, 10));\n  };\n\n  CitiesTypeaheadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CitiesTypeaheadComponent,\n    selectors: [[\"jv-cities-typeahead\"]],\n    decls: 4,\n    vars: 7,\n    consts: [[\"typeaheadOptionField\", \"name\", \"placeholder\", \"Pesquisar\", 1, \"form-control\", 3, \"ngModel\", \"typeahead\", \"typeaheadAsync\", \"typeaheadWaitMs\", \"typeaheadItemTemplate\", \"disabled\", \"ngModelChange\", \"typeaheadOnSelect\", \"typeaheadLoading\"], [4, \"ngIf\"], [\"itemTemplate\", \"\"]],\n    template: function CitiesTypeaheadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CitiesTypeaheadComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.search = $event;\n        })(\"typeaheadOnSelect\", function CitiesTypeaheadComponent_Template_input_typeaheadOnSelect_0_listener($event) {\n          return ctx.onSelected($event);\n        })(\"typeaheadLoading\", function CitiesTypeaheadComponent_Template_input_typeaheadLoading_0_listener($event) {\n          return ctx.loading = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(1, CitiesTypeaheadComponent_div_1_Template, 2, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, CitiesTypeaheadComponent_ng_template_2_Template, 2, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n\n        i0.ɵɵproperty(\"ngModel\", ctx.search)(\"typeahead\", ctx.dataSource$)(\"typeaheadAsync\", true)(\"typeaheadWaitMs\", 400)(\"typeaheadItemTemplate\", _r1)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.TypeaheadDirective, i4.NgIf],\n    styles: [\"\"]\n  });\n  return CitiesTypeaheadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}