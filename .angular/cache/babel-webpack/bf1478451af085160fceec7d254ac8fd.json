{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { select } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { withLatestFrom, mergeMap, map } from 'rxjs/operators';\nimport { Bookmark } from 'src/app/shared/models/bookmark.model';\nimport * as fromBookmarksActions from './bookmarks.actions';\nimport * as fromBookmarksSelectors from './bookmarks.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"src/app/shared/services/weather.service\";\nexport let BookmarksEffects = /*#__PURE__*/(() => {\n  class BookmarksEffects {\n    constructor(actions$, store, weatherService) {\n      this.actions$ = actions$;\n      this.store = store;\n      this.weatherService = weatherService;\n      this.toggleBookmarksById$ = createEffect(() => this.actions$.pipe(ofType(fromBookmarksActions.toggleBookmarById), withLatestFrom(this.store.pipe(select(fromBookmarksSelectors.selectBookmarksList))), mergeMap(([{\n        id\n      }, bookmarks]) => {\n        if (bookmarks.some(bookmark => bookmark.id === id)) {\n          return of(bookmarks.filter(bookmark => bookmark.id !== id));\n        }\n\n        return this.weatherService.getCityWeatherById(id.toString()).pipe(map(cityWeather => {\n          const bookmark = new Bookmark();\n          bookmark.id = cityWeather.city.id;\n          bookmark.coord = cityWeather.city.coord;\n          bookmark.name = cityWeather.city.name;\n          bookmark.country = cityWeather.city.country;\n          return [...bookmarks, bookmark];\n        }));\n      }), map(list => fromBookmarksActions.updateBookmarksList({\n        list\n      }))));\n    }\n\n  }\n\n  BookmarksEffects.ɵfac = function BookmarksEffects_Factory(t) {\n    return new (t || BookmarksEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.WeatherService));\n  };\n\n  BookmarksEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookmarksEffects,\n    factory: BookmarksEffects.ɵfac\n  });\n  return BookmarksEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}