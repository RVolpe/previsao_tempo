{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as fromHomeActions from '../../home/state/home.actions';\nimport * as fromBookmarksActions from './bookmarks.actions';\nexport const bookmarkInitialState = {\n  list: []\n};\nconst reducer = createReducer(bookmarkInitialState, on(fromHomeActions.toggleBookmark, (state, {\n  entity\n}) => Object.assign(Object.assign({}, state), {\n  list: toggleBookmark(state.list, entity)\n})), on(fromBookmarksActions.removeBookmark, (state, {\n  id\n}) => Object.assign(Object.assign({}, state), {\n  list: state.list.filter(b => b.id !== id)\n})));\nexport function bookmarkReducer(state, action) {\n  return reducer(state, action);\n}\n\nfunction toggleBookmark(list, entity) {\n  if (!!list.find(bookmark => bookmark.id === entity.id)) {\n    return list.filter(bookmark => bookmark.id !== entity.id);\n  }\n\n  return [...list, entity];\n}","map":null,"metadata":{},"sourceType":"module"}